@model EmployeeInfoModel

@{
    ViewData["Title"] = "Employee Management";
}

<div class="row">
    <!-- Form Section -->
    <div class="col-md-4">
        <h4 class="mb-4">Add/Update Employee</h4>
        <form asp-action="SaveReview" method="post">
            <input value="0" id="Id" name="Id" hidden />

            <div class="form-group">
                <label for="employeeId">Employee Name</label>
                <select class="form-control" id="employeeId" name="employeeId" required>
                    <option value="">-- Select Employee --</option>
                    @foreach (var emp in Model.employeeList)
                    {
                        <option value="@emp.Id">@emp.name</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label for="reviewDate">Review Date</label>
                <input type="date" class="form-control" id="reviewDate" name="reviewDate" required>
            </div>


            <div class="form-group">
                <label for="score">Score</label>
                <input type="text" class="form-control" id="score" name="score" placeholder="Enter employee name" onkeypress="return validateNumber(event)" required>
            </div>

            <div class="form-group">
                <label for="notes">Note</label>
                <input class="form-control" id="notes" name="notes" placeholder="Enter employee email">
            </div>

          

            <button type="submit" class="btn btn-primary">Save</button>
        </form>
    </div>

    <div class="col-md-8">
        <h4 class="mb-4">Employee Performance</h4>
        <table class="table table-striped" style="width:100%">
            <thead class="thead-dark">
                <tr>
                    <th>#</th>
                    <th width="35%">Name & Department</th>
                    <th width="15%">Review Date</th>
                    <th width="15%">Score</th>
                    <th width="20%">Notes</th>
                    <th width="15%">Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null)
                {
                    int page = (Model.CurrentPage - 1) * Model.PageSize + 1;
                    int index = 1;
                    foreach (var employee in Model.PerformanceList)
                    {
                        <tr>
                            <td>@index</td>
                            <td>@employee.employeeName-@employee.dept</td>
                            <td>@employee.reviewDate.ToString("dd-MMM-yyyy")</td>
                            <td>@employee.score</td>
                            <td>@employee.notes</td>
                            <td>
                                <a onclick="Edit(@employee.Id)" class="btn btn-warning btn-sm">Edit</a>
                                <a asp-action="DeleteReview" asp-route-id="@employee.Id" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this employee?');">Delete</a>
                            </td>
                        </tr>
                        index++;
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center">No employees found.</td>
                    </tr>
                }
            </tbody>
        </table>
        @if (Model.PerformanceList.Count() > 0 && Model.PerformanceList.FirstOrDefault().TotalPages > 1)
        {
            <nav>
                <ul class="pagination">
                    @if (Model.PerformanceList.FirstOrDefault().CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("PerformanceReview", new {  page = Model.PerformanceList.FirstOrDefault().CurrentPage - 1 })">Previous</a>
                        </li>
                    }

                    @for (int i = 1; i <= Model.PerformanceList.FirstOrDefault().TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PerformanceList.FirstOrDefault().CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("PerformanceReview", new {  page = i })">@i</a>
                        </li>
                    }

                    @if (Model.PerformanceList.FirstOrDefault().CurrentPage < Model.PerformanceList.FirstOrDefault().TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("PerformanceReview", new { page = Model.PerformanceList.FirstOrDefault().CurrentPage + 1 })">Next</a>
                        </li>
                    }
                </ul>
            </nav>
        }
    </div>
</div>


@section Scripts {

    <script>
        function Edit(Id) {
            $.ajax({
                url: "/Employee/PerformanceReview/GetPerformance",
                type: 'GET',
                contentType: 'application/json',
                data: { Id: Id },
                success: function (response) {
                    $('#Id').val(response.Id);
                    $('#score').val(response.score);
                    $('#employeeId').val(response.employeeId).trigger('change');
                    $('#notes').val(response.notes);
                    $('#reviewDate').val(response.reviewDate.split('T')[0]);

                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                }
            });
        }
        function validateNumber(e) {
            const pattern = /^[0-9]$/;
            return pattern.test(e.key)
        }

    </script>

}
